#!/usr/bin/env python
#
# This is a Git post-receive hook script that assumes that the current repository
# is getting sent changesets for review. This script does the job of taking those
# changesets and sending them to ta Review Board instance for review.

import os
import re
import subprocess
import sys

from ConfigParser import ConfigParser

CONFIG_FILE = 'config.cfg'


def execute(command):
    """Executes the specified command and returns the stdout output."""
    if isinstance(command, list):
        subprocess.list2cmdline(command)

    process = subprocess.Popen(command, shell=True, stdout=subprocess.PIPE)
    return process.communicate()[0].strip()

def generate_diff(base_ref, tip_ref):
    """Performs a diff on a particular ref range."""
    if base_ref == tip_ref:
        rev_range = "%s..%s^" % (base_ref, tip_ref)
    else:
        rev_range = "%s..%s" % (base_ref, tip_ref)

    cmdline = [
        "git",
        "diff",
        "--no-color",
        "--full-index",
        "--no-ext-diff",
        "--ignore-submodules",
        "--no-renames",
        "-M",
        rev_range
    ]

    return execute(cmdline)

def main():
    # We'll start by reading in the configuration for this hook...
    config = ConfigParser()
    config.readfp(open(CONFIG_FILE))
    REVIEWBOARD_URL = config.get('RB', 'url')
    USERNAME = config.get('RB', 'username')
    PASSWORD = config.get('RB', 'password')

    # The "post-receive" script is run after receive-pack has accepted a pack
    # and the repository has been updated.  It is passed arguments in through
    # stdin in the form
    #  <oldrev> <newrev> <refname>
    # For example:
    #  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
    #
    # We need all three, so let's extract those.
    OLD_SHA = sys.argv[1]
    NEW_SHA = sys.argv[2]
    NEW_REF = sys.argv[3]


if __name__ == '__main__':
    main()
